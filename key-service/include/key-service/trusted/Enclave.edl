/*
 * Copyright 2024 The SeSeMI Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

enclave {
  include "stdint.h"
	include "wolfssl/ssl.h"

  from "attester.edl" import *;
  from "tchallenger.edl" import *;
  from "ratls_wolfssl.edl" import *;
  from "server.edl" import *;

  from "sgx_tstdc.edl" import *; // needed for mutex and lock_guard use
  from "sgx_tsgxssl.edl" import *; // needed for sgxssl
  from "sgx_pthread.edl" import*; // needed for sgxssl

  trusted {
    public sgx_status_t enc_client_service([user_check] WOLFSSL* ssl, [user_check] void* store_ptr);
    public sgx_status_t enc_worker_service([user_check] WOLFSSL* ssl, [user_check] void* store_ptr);
  };

  untrusted {
    void ocall_save_kv([in, size=key_len] const void* key_buf, size_t key_len, [in, size=value_len] const void* value_buf, size_t value_len, [user_check] void* store_ptr);
    void ocall_get_kv([in, size=key_len] const void* key_buf, size_t key_len, [out, size=value_buf_len] void* value_buf, size_t value_buf_len, [out] size_t* value_len, [user_check] void* store_ptr);
    void ocall_debug_print([in, size=len] const void* s, size_t len);
    void ocall_debug_print_string([in, string] const char* str);
  };
};
